/*
CSS = Hoja de estilo en cascada. si aplicamos en estilo al mismo selector lo de abajo pesa mas de lo de arriba.

Css --> Carpeta Css -> File siempre style.css
HTML -> Siempre index.html -> Otros html en una carpeta HTML

BorderRadius Genera elipses no circulos -> Orden siempre en el sentido del reloj
El 50% genera un ciruclo -> porque divide el cuadrado entre 2 -> el maximo valor es 50%

Menu -> la semantica debe ser nav -> ul -> li -> a    ----> Puede haber más de 1 nav

H1 solo puede haber 1 --> tener más que uno es un fallo muy GORDO
los h NUNCA se elijen en base al tañano --> NUNCA puedes tener un h3 si no tienes un h1 y h2. van por orden de gerarquía  --> HTML se encarga de estructuras no de estetica -> no tienes que utilizar un h solo porque es más pequeño

Etiqueta de bloque siempre ocupa el ancho disponible
Etiqueta de linea  siempre ocupa lo que ocupa su contenido

p --> Solo para parrafos

span --> el contenido suelto como nombre, apellido, email van siempre en un span --> es un contenedor de linea, no significa nada para el ordenador, solo es un contenido

Article -> No es lo mismo que un section . el seciton envuelve el contenido relacionados --> los article representan contanido endependiente --> como saberlo? si puedes leerlo sin leerte nada mas y entenderlo, deberia ser un article porque no está relacionado con nada más y entiendes perfectamente el mensaje. Article contenido endependiente -  section contenido relacionado


position --> espacio reservado -> espacio que el navegador reserva para ello. con position podemos modificar este espacio reservado -> normalmente se suele trabajar en px pero en algunos casos trabajar con % te ahorra trabajo

    relative: mantienen su espacio reservado y se mueve desde el punto que le corresponde, desde donde està por defecto
    absolute: los elementos pierden su espacio reservado y sus medidas. el contenido solo va a medir lo que mide su contenido. pierde su espacio reservado y se mueve respecto a su contenedor posicionado más cercano. si su padre tiene position se mueve respecto a su padre. con su abuelo igual. si no encuentran un contenedor con position se mueven respecto al body


    background img --> propriedad background-size: cover


    ::after y -::before son lo mismo (son pseudoelementos que te permiten creare 2 elementos extra por cada elemento que tienes) solo que se colocan antes y despues del elemnto. solo que dandole position absolute se van a colocar donde queremos nosotros
    content:'' obligatoria sino no lo dibuja
    se puede despues utilizar como cualquier etiqueta html


Box-shadow: offSetX offSetY blur spread color --> Siempre mantienen el tamaño del elemento y se ponen siempre por debajo
    inset -> la sombre se dibuja por dentro.
    


Display flex

propriedades

-Justify content : eje principal que se puede controlar con el flex-direction --> row- row-reverse - column- column-reverse
    -Flex start : coloca los elementos al principio del eje principal
    -Flex End: coloca los elementos al final de todo
    -center: en el centro del eje principla
    -space-[beetwen]: 
        beetween: 1 al principio, 1 al final del eje y el resto lo distribuye en el espacio que queda
     -space-[around]: Reparte el espacio disponible entre los elementos restantes dejando el mismo espacio entre
        elementos pero dejando la mitad de ese espacio al principio y al final del elemento.  
    -space-[around]: lo mismo del araung solo que dejar la mitad del hueco deja el mismo hueco
-align items: eje secundario. solo se pueden colocar elementos con align items
    - flex-start
    - flex-end
    - center
    - stretch --> valor por defecto que rompe todo - estira el elemento para que ocupa toro el ancho del contenedor
-gap: para da espacio a los elementos. Es capaz de darte espacio entre elemnto sin afectar a los lados !! Nunca (o casi nunca) hay que utilizar margin
- un margin auto dentro del flex lo que hace es crear un margen en la direccion que le digas hasta su hermano
    







--- Para la queja

---->Objetivos Escuela Trazos:
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación
01/ Diseño Web vs Programación web.
• Lenguajes de programación web y su aplicación a
proyectos. Perfiles: Frontend, Backend, Mean y Fullstack.
• Análisis de tendencias en programación web.
• Fases del proceso web.
• Conceptualización gráfica.
• Layouts y tipos de estructura.
• El color en la web.
• Principios de usabilidad (UX / UI).
02/ HTML5.
• Introducción al lenguaje HTML 5.
• Uso semántico de las etiquetas.
• Estructura: header, footer, main, section, article
y aside. • Texto: Strong, span y em.
• Enlaces.
• Imágenes y Picture.
• Imágenes SVG: Imagen vs Código.
• Etiquetas Vídeo y Audio.
• iFrames.
• Listas.
• Tablas.
• Formularios.
• Atributos data.
• Etiquetas Meta.
• Meta Open Graph.
03/ CSS3.
• Selectores: Básicos, Avanzados,
Pseudoelementos (before/after).
• Unidades de medida: básicas, avanzadas y función calc().
• Tipografía: @font-face y Google Fonts.
• Maquetación en Flex.
• Maquetación en Grid.
• Transition.
• Animation + @keyframes.
• Custom properties: variables en CSS.
• Responsive: @media.
• Metodología BEM.
04/ Transpiladores: SASS y SCSS.
• Introducción a preprocesadores y Task Runners.
• Usando Prepros.
• Anidación de elementos.
• Variables en SASS.
• Usando Mixins.
05/ Javascript.
• Diferencias entre Javascript Nativo vs ECMAScript vs Typescript.
• Introducción a las bases de la programación funcional y POO.
• Estado de Javascript: Webs vs Aplicaciones.
• Variables: let,const, var.
• Funciones: parámetros e invocación.
• Estructuras lógicas: bucles y condicionales.
06/ jQuery en empresas.
• Introducción y porqué se sigue usando.
• Selectores.
• Eventos.
• Efectos de Javascript junto a CSS.
07/ Banners.
• Introducción: Qué son y uso en empresas.
• Tipos de banners y formatos. Introduciendo ClickTag.
08/ Newsletter.
• Introducción: Qué son y uso en empresas.
• MJML.io: Preprocesador de newsletters.
09/ Introducción a PHP.
• Introducción a PHP 7: Qué es y para qué sirve.
• MAMP como servidor.
10/ WordPress.
• Introducción a CMS: Wordpress.
• Wordpress Panel de control.
• Wordpress Páginas, Entradas y Configuración.
• Wordpress Temas vs Plugins.
11/ Subida a Producción.
• Clásicos vs Paas.
• Hosting, dominio y proveedores.
• Subida de archivos por FTP.
12/ GIT.
• Introducción.
• Comandos básicos: init, add, commit, push y pull.
• Ramas: branch y merge.
• Aplicaciones GIT: Github Desktop y Bitbucket.
13/ Búsqueda de empleo.
• Preparación de tu perfil de Github.
• Preparación de tu perfil de LinkedIn.
• Pruebas lógicas de preparación


* Objetivos a lograr del ppw
* Criterios de relacion y orden
* Css --> Carpeta Css -> File siempre style.css / index  --> Siempre utilizado estilos.css y home.html ERROR para errorer en * servidores -> Los servidores solo son capaces de leer un archivo de inicio index.html, si es otro NO vale
* Error del * con estilos --> NUNCA! SOLO USAR EL BORDER BOX y explicacion del por qué!
* Metodologia EMMET --> NUNCA EXPLICADO - NI UTILIZADO --> Para facilitar mucho el trabajo
* Especificidad de etiquetas mal explicado (no sabemos calcularlo)
* https://jonassebastianohlsson.com/specificity-graph/  --> Pagina web trabajo final muy mal hecho como especificidad --> Curvas especificidad MUY alta
* Border radius admite 8 valores porque son elipses y no 4 valores como nos habian dicho y generaba circulos
* Nunca hemos hecho un menú con la forma semantica correcta, siempre un nav con a -> puede haber mas nav
* Main -> obligatorio en la pagina -> Nunca usado en ningun trabajo
* H3 hemos siempre utilizado sin tener una gerarquía antecedente
* SPAN nunca utilizado correctamente. ejemplo un correo siempre lo hemos puesto en un p y no es correcto!
* Hay que utilizar el position absolute como ultimo remedio si no queda otra. Siempre lo hemos utilizado para posicionar texto arriba de img y es una mala practica
* ::after ::before  --> Nunca lo hemos visto y es SUPER importante pare crear efectos visuales
* Box shadow - gradiente nunca explicado -> Simplemente generarlo de una pagina web, copiar y pegar
* Diplay flex -> Ningun tipo de información -> Solo una imagen de CSS TRICK copiada y pegada con enlace para ver información si no entendiamo algo de la imagen que ha subido
* Explicación del flex para usar margin auto para alinear items como deseamos
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 
* 

*/
 /*MALA PRACTICA PORQUE LE QUITAS ESTILOS PARA PONERLO DESPUES*/
* {
    box-sizing: border-box;
}

.container > *{
    width: 200px;
    height: 200px;
    padding: 25px;
    border: 10px solid purple;
    background-color: red;
    border-radius: 20px 30px 40px 50px / 50px 40px 30px 20px;

}

.box-small{
    width: 100px;
    height: 100px;

}





/* BOX MODEL --> base del css. cuando tenemos un elemento y le aplicamos medidas estas medidas se aplican a la caja*/

a{text-decoration: none;
color: inherit;}

ul{
    list-style: none;
    padding-left: 0;
    margin-block: 0;
}

/*
.nav__ul{
    display: flex;
    justify-content: space-between;
}

.Item-1, .Item-2 {
    order: 1;
}

.Item-3{
    order: 2; 
    margin: 0 auto;
}

.Item-4, .Item-5 {
    order: 3; 
}
*/

.menu{
    display: flex;
    justify-content: center;
    gap: 1rem;
    padding: 1rem 2rem;
}

.menu__item--center{
    margin-inline: auto;
    /*
        Otra opcion:
        flex-grow: 1;
        text-align:center;
    */
}

